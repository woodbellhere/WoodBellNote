import{_ as s,o as i,c as a,R as t}from"./chunks/framework.mPPLtEmG.js";const u=JSON.parse('{"title":"setup 函数和 setup 语法糖","description":"","frontmatter":{},"headers":[],"relativePath":"vue/setup.md","filePath":"vue/setup.md"}'),e={name:"vue/setup.md"},p=t(`<h1 id="setup-函数和-setup-语法糖" tabindex="-1">setup 函数和 setup 语法糖 <a class="header-anchor" href="#setup-函数和-setup-语法糖" aria-label="Permalink to &quot;setup 函数和 setup 语法糖&quot;">​</a></h1><h2 id="script-setup" tabindex="-1">script setup <a class="header-anchor" href="#script-setup" aria-label="Permalink to &quot;script setup&quot;">​</a></h2><ul><li>是 setup 函数的语法糖</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;export default {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {xxx}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  xxx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="主要区别" tabindex="-1">主要区别 <a class="header-anchor" href="#主要区别" aria-label="Permalink to &quot;主要区别&quot;">​</a></h3><ul><li>定义的数据可直接在模板中使用，无需返回</li><li>也可直接导入其他库来使用</li><li>无法配置 components 配置项，可以直接引入组件使用</li></ul><h3 id="props-和-emit" tabindex="-1">props 和 emit <a class="header-anchor" href="#props-和-emit" aria-label="Permalink to &quot;props 和 emit&quot;">​</a></h3><ul><li><p>props 通过 defineProps 传递</p></li><li><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{title:String，default:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;标题&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{name:String, required:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div></li><li><p>如果要在 script setup 中访问 prop，则通过 const = defineProp 接收，并使用 props.title 即可</p></li><li><p>emits 则使用 defineEmits</p></li><li><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineEmits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;remove&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div></li><li><p>如需在 script 内使用，也是定义变量接住值</p></li><li><p>props 和 emits 是编译器宏的一部分，可以直接使用</p></li></ul><h3 id="其他钩子" tabindex="-1">其他钩子 <a class="header-anchor" href="#其他钩子" aria-label="Permalink to &quot;其他钩子&quot;">​</a></h3><ul><li>context 参数的两个内容，slots 和 attrs 都有 use 钩子，引入即可</li></ul>`,10),l=[p];function n(h,r,k,d,E,o){return i(),a("div",null,l)}const g=s(e,[["render",n]]);export{u as __pageData,g as default};
