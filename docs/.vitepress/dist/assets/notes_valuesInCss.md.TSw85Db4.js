import{_ as e,o as a,c as t,R as s}from"./chunks/framework.mPPLtEmG.js";const u=JSON.parse('{"title":"css 中的值","description":"","frontmatter":{},"headers":[],"relativePath":"notes/valuesInCss.md","filePath":"notes/valuesInCss.md"}'),r={name:"notes/valuesInCss.md"},n=s('<h1 id="css-中的值" tabindex="-1">css 中的值 <a class="header-anchor" href="#css-中的值" aria-label="Permalink to &quot;css 中的值&quot;">​</a></h1><h2 id="常见的-px-系列" tabindex="-1">常见的 px 系列 <a class="header-anchor" href="#常见的-px-系列" aria-label="Permalink to &quot;常见的 px 系列&quot;">​</a></h2><p>Px = 1/96 inch Pt = 1/72 inch Pc = 1/6 inch = 12pt = 16px Inch = 25.4 mm = 2.54 cm = 6 pc = 72 pt = 96 px</p><h2 id="em-和-rem" tabindex="-1">em 和 rem <a class="header-anchor" href="#em-和-rem" aria-label="Permalink to &quot;em 和 rem&quot;">​</a></h2><p>em 是本 element 的 font-size 的值 而 rem 是 root em 的值，是根元素 font-size 的值 根节点的 em 是浏览器默认的 16px</p><p>rem 用来设置 font-size；em 用来设置 padding，margin，border-radius 等其他大部分属性 px 设置 border 是个挺保险的设置</p><h2 id="值的继承" tabindex="-1">值的继承 <a class="header-anchor" href="#值的继承" aria-label="Permalink to &quot;值的继承&quot;">​</a></h2><p>奇妙继承机制 元素的值使用由长度定义的值时，子元素就会继承其计算值。 而给 line-height 指定 en 时，值就会变为计算值</p><p>line-height 的设置直接不要单位</p><p>观察观察 css 变量和预处理工具</p><p>嵌套 list(ul 里套 li 再套 ul，循环)的字体大小向内逐级变为原来的 em 倍，所以要注意手动设置为 1em</p>',11),o=[n];function i(c,p,l,h,m,d){return a(),t("div",null,o)}const x=e(r,[["render",i]]);export{u as __pageData,x as default};
