import{_ as a,o as e,c as t,R as r}from"./chunks/framework.mPPLtEmG.js";const u=JSON.parse('{"title":"grid 的流水账","description":"","frontmatter":{},"headers":[],"relativePath":"notes/grid.md","filePath":"notes/grid.md"}'),i={name:"notes/grid.md"},o=r('<h1 id="grid-的流水账" tabindex="-1">grid 的流水账 <a class="header-anchor" href="#grid-的流水账" aria-label="Permalink to &quot;grid 的流水账&quot;">​</a></h1><h2 id="直接确定整个网格容器的高度" tabindex="-1">直接确定整个网格容器的高度 <a class="header-anchor" href="#直接确定整个网格容器的高度" aria-label="Permalink to &quot;直接确定整个网格容器的高度&quot;">​</a></h2><p>grid-line 就是分割布局的网格线，每根线都有自己的编号 grid-cell 网格布局中的网格 gutters（gaps）网格子项之间的间隔，分行列 grid-tracks 基本就是一整行或者一整列</p><h2 id="网格容器" tabindex="-1">网格容器 <a class="header-anchor" href="#网格容器" aria-label="Permalink to &quot;网格容器&quot;">​</a></h2><p>grid-template-column Grid-template-row Row-gap Column-gap Justify-content Align-items Align-content 在网格布局里是 jsutify-content 的列翻版，用这俩就行 align-items 是在单个网格内部进行对齐</p><h2 id="网格子项" tabindex="-1">网格子项 <a class="header-anchor" href="#网格子项" aria-label="Permalink to &quot;网格子项&quot;">​</a></h2><p>gird-column 把子项定位到特定网格 grid-row 把子项定位到特定网格 justify-self 覆盖 justify 的行规则 align-self 覆盖 align 的列规则</p><h2 id="网格值" tabindex="-1">网格值 <a class="header-anchor" href="#网格值" aria-label="Permalink to &quot;网格值&quot;">​</a></h2><p>fr 跟 flex 那一系列的比例值差不多 都是根据富余空间算比例</p>',9),n=[o];function l(s,d,c,h,_,g){return e(),t("div",null,n)}const f=a(i,[["render",l]]);export{u as __pageData,f as default};
